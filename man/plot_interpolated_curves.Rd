% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_interpolated_curves.R
\name{plot_interpolated_curves}
\alias{plot_interpolated_curves}
\title{Plot interpolated identification curves}
\usage{
plot_interpolated_curves(
  from = c(0, 0),
  to = c(5, 2),
  nsteps = 6L,
  intercept = 0,
  link = plogis,
  colors = c("blue", "gray", "red"),
  linesize = 1
)
}
\arguments{
\item{from}{Numeric vector of polynomial terms to start at}

\item{to}{Numeric vector of polynomial terms to end at}

\item{nsteps}{Number of steps to interpolate between}

\item{intercept}{Intercept to use}

\item{link}{Link function to use, defaults to plogis (i.e., logit link)}

\item{colors}{Discrete points for a continuous color gradient. Defaults
to blue, gray, red (ascending from blue towards red)}

\item{linesize}{Width of the lines to use. Defaults to 1, but you may
want to decrease if plotting many lines}
}
\value{
A ggplot of the interpolated curves
}
\description{
Given starting and ending points for each polynomial term coefficient,
generate new curves that are interpolated between the two. The number
of total curves is given by \code{nsteps}. So, if \code{nsteps=4} then you'll get
the 2 endpoint curves passed to the function as well as 2 interpolated
curves between those endpoints.
}
\details{
Note that this function assumes a single intercept for the time being.
}
\examples{

plot_interpolated_curves(c(0,0,0), to = c(2, 1, -3))
}
